// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProbneKolokwium2.Data;

#nullable disable

namespace ProbneKolokwium2.Migrations
{
    [DbContext(typeof(BoatContext))]
    partial class BoatContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.5.24306.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProbneKolokwium2.Models_DTOS.BoatStandard", b =>
                {
                    b.Property<int>("IdBoatStandard")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBoatStandard"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("level")
                        .HasColumnType("int");

                    b.HasKey("IdBoatStandard");

                    b.ToTable("boatstandard");

                    b.HasData(
                        new
                        {
                            IdBoatStandard = 1,
                            Name = "podstawowy",
                            level = 1
                        },
                        new
                        {
                            IdBoatStandard = 2,
                            Name = "tani",
                            level = 2
                        },
                        new
                        {
                            IdBoatStandard = 3,
                            Name = "średni",
                            level = 3
                        },
                        new
                        {
                            IdBoatStandard = 4,
                            Name = "na bogato",
                            level = 4
                        });
                });

            modelBuilder.Entity("ProbneKolokwium2.Models_DTOS.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClient"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdClientCategory")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdClient");

                    b.HasIndex("IdClientCategory");

                    b.ToTable("client");

                    b.HasData(
                        new
                        {
                            IdClient = 1,
                            Birthday = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdClientCategory = 1,
                            LastName = "Klientowski",
                            Name = "Klient",
                            Pesel = "0000000001",
                            email = "aaa@aaa.com"
                        },
                        new
                        {
                            IdClient = 2,
                            Birthday = new DateTime(2004, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdClientCategory = 2,
                            LastName = "Kowalski",
                            Name = "Jan",
                            Pesel = "0000000002",
                            email = "bbb@aaa.com"
                        });
                });

            modelBuilder.Entity("ProbneKolokwium2.Models_DTOS.ClientCategory", b =>
                {
                    b.Property<int>("IdClientCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClientCategory"));

                    b.Property<int>("DiscountPerc")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdClientCategory");

                    b.ToTable("clientcategory");

                    b.HasData(
                        new
                        {
                            IdClientCategory = 1,
                            DiscountPerc = 0,
                            Name = "plebs"
                        },
                        new
                        {
                            IdClientCategory = 2,
                            DiscountPerc = 40,
                            Name = "magnat"
                        },
                        new
                        {
                            IdClientCategory = 3,
                            DiscountPerc = 5,
                            Name = "średni"
                        });
                });

            modelBuilder.Entity("ProbneKolokwium2.Models_DTOS.Reservation", b =>
                {
                    b.Property<int>("IdReservation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReservation"));

                    b.Property<string>("CancelReservation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Fullfilled")
                        .HasColumnType("bit");

                    b.Property<int>("IdBoatStandard")
                        .HasColumnType("int");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("NumOfBoats")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("IdReservation");

                    b.HasIndex("IdBoatStandard");

                    b.HasIndex("IdClient");

                    b.ToTable("reservation");

                    b.HasData(
                        new
                        {
                            IdReservation = 1,
                            Capacity = 50,
                            DateFrom = new DateTime(2024, 6, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTo = new DateTime(2024, 6, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fullfilled = false,
                            IdBoatStandard = 3,
                            IdClient = 1,
                            NumOfBoats = 1,
                            Price = 0.0
                        },
                        new
                        {
                            IdReservation = 2,
                            Capacity = 520,
                            DateFrom = new DateTime(2024, 6, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTo = new DateTime(2024, 7, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fullfilled = false,
                            IdBoatStandard = 1,
                            IdClient = 2,
                            NumOfBoats = 2,
                            Price = 0.0
                        });
                });

            modelBuilder.Entity("ProbneKolokwium2.Models_DTOS.Sailboat", b =>
                {
                    b.Property<int>("IdSailboat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSailboat"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdBoatStandard")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("IdSailboat");

                    b.HasIndex("IdBoatStandard");

                    b.ToTable("boat");

                    b.HasData(
                        new
                        {
                            IdSailboat = 1,
                            Capacity = 1000,
                            Description = "no łódka no",
                            IdBoatStandard = 1,
                            Name = "ŁODZ",
                            Price = 100.0
                        },
                        new
                        {
                            IdSailboat = 2,
                            Capacity = 500,
                            Description = "no zaglowka no",
                            IdBoatStandard = 4,
                            Name = "zaglowka",
                            Price = 1000.0
                        },
                        new
                        {
                            IdSailboat = 3,
                            Capacity = 100,
                            Description = "no tankowiec no",
                            IdBoatStandard = 3,
                            Name = "tankowiec 1000",
                            Price = 500.0
                        });
                });

            modelBuilder.Entity("ProbneKolokwium2.Models_DTOS.SailboatReservation", b =>
                {
                    b.Property<int>("IdSailboat")
                        .HasColumnType("int");

                    b.Property<int>("IdReservation")
                        .HasColumnType("int");

                    b.HasKey("IdSailboat", "IdReservation");

                    b.HasIndex("IdReservation");

                    b.ToTable("sailboatreservation");

                    b.HasData(
                        new
                        {
                            IdSailboat = 2,
                            IdReservation = 1
                        },
                        new
                        {
                            IdSailboat = 1,
                            IdReservation = 2
                        },
                        new
                        {
                            IdSailboat = 3,
                            IdReservation = 2
                        });
                });

            modelBuilder.Entity("ProbneKolokwium2.Models_DTOS.Client", b =>
                {
                    b.HasOne("ProbneKolokwium2.Models_DTOS.ClientCategory", "IdClientCategoryNavigation")
                        .WithMany()
                        .HasForeignKey("IdClientCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdClientCategoryNavigation");
                });

            modelBuilder.Entity("ProbneKolokwium2.Models_DTOS.Reservation", b =>
                {
                    b.HasOne("ProbneKolokwium2.Models_DTOS.BoatStandard", "IdBoatStandardNavigation")
                        .WithMany()
                        .HasForeignKey("IdBoatStandard")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProbneKolokwium2.Models_DTOS.Client", "IdClientNavigation")
                        .WithMany()
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdBoatStandardNavigation");

                    b.Navigation("IdClientNavigation");
                });

            modelBuilder.Entity("ProbneKolokwium2.Models_DTOS.Sailboat", b =>
                {
                    b.HasOne("ProbneKolokwium2.Models_DTOS.BoatStandard", "IdBoatStandardNavigation")
                        .WithMany()
                        .HasForeignKey("IdBoatStandard")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdBoatStandardNavigation");
                });

            modelBuilder.Entity("ProbneKolokwium2.Models_DTOS.SailboatReservation", b =>
                {
                    b.HasOne("ProbneKolokwium2.Models_DTOS.Reservation", "IdReservationNavigation")
                        .WithMany("Reservation_SailboatReservation")
                        .HasForeignKey("IdReservation")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ProbneKolokwium2.Models_DTOS.Sailboat", "IdSailboatNavigation")
                        .WithMany("Sailboat_SailboatReservations")
                        .HasForeignKey("IdSailboat")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("IdReservationNavigation");

                    b.Navigation("IdSailboatNavigation");
                });

            modelBuilder.Entity("ProbneKolokwium2.Models_DTOS.Reservation", b =>
                {
                    b.Navigation("Reservation_SailboatReservation");
                });

            modelBuilder.Entity("ProbneKolokwium2.Models_DTOS.Sailboat", b =>
                {
                    b.Navigation("Sailboat_SailboatReservations");
                });
#pragma warning restore 612, 618
        }
    }
}
